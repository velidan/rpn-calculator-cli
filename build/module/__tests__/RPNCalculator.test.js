import { Sum, Substract, Multiply, Divide } from '../operations';
import { UnregisteredOperationError, DivideByZeroError } from '../errors';
import RPNCalculator from '../core/RPNCalculator';
const config = {
    operations: [new Sum(), new Substract(), new Multiply(), new Divide()]
};
let rpnCalculator;
beforeEach(() => {
    rpnCalculator = new RPNCalculator(config);
});
// 5 + 8 = 13
test("Input: '5 2 /' : Result => 2.5", () => {
    rpnCalculator.pushItem('5');
    rpnCalculator.pushItem('2');
    rpnCalculator.pushItem('/');
    expect(rpnCalculator.calculate()).toBe(2.5);
});
// 5 + 8 = 13
test("Input: '4 -' : Result => -4", () => {
    rpnCalculator.pushItem('4');
    rpnCalculator.pushItem('-');
    expect(rpnCalculator.calculate()).toBe(-4);
});
// 5 + 8 = 13
test("Input: '5 8 +' : Result => 13", () => {
    rpnCalculator.pushItem('5');
    rpnCalculator.pushItem('8');
    rpnCalculator.pushItem('+');
    expect(rpnCalculator.calculate()).toBe(13);
});
// 5 + 8 = 13.  13 + 5 = 18. 5 - 18 = -13
test("Input: '5 5 5 8 + + -' : Result => -13", () => {
    rpnCalculator.pushItem('5');
    rpnCalculator.pushItem('5');
    rpnCalculator.pushItem('5');
    rpnCalculator.pushItem('8');
    rpnCalculator.pushItem('+');
    rpnCalculator.pushItem('+');
    rpnCalculator.pushItem('-');
    expect(rpnCalculator.calculate()).toBe(-13);
});
// ( -3 * -2 ) + 5 = 11
test("Input: '-3 -2 * 5 +' : Result => 11", () => {
    rpnCalculator.pushItem('-3');
    rpnCalculator.pushItem('-2');
    rpnCalculator.pushItem('*');
    rpnCalculator.pushItem('5');
    rpnCalculator.pushItem('+');
    expect(rpnCalculator.calculate()).toBe(11);
});
// (9 - 1) / 5 = 0.625
test("Input: '5 9 1 - /' : Result => 0.65", () => {
    rpnCalculator.pushItem('5');
    rpnCalculator.pushItem('9');
    rpnCalculator.pushItem('1');
    rpnCalculator.pushItem('-');
    rpnCalculator.pushItem('/');
    expect(rpnCalculator.calculate()).toBe(0.625);
});
// (9 - 1) / 8 = 1. 5 -> omit. We don't have an operation for it
test("Input: '5 9 1 - 8 /' : Result => 1", () => {
    rpnCalculator.pushItem('5');
    rpnCalculator.pushItem('9');
    rpnCalculator.pushItem('1');
    rpnCalculator.pushItem('-');
    rpnCalculator.pushItem('8');
    rpnCalculator.pushItem('/');
    expect(rpnCalculator.calculate()).toBe(1);
});
test(`Throws UnregisteredOperationError when push operation that wasn't
  presented in rpn calculator config.`, () => {
    expect(() => {
        rpnCalculator.pushItem('-=-');
    }).toThrowError(UnregisteredOperationError);
});
test("Input: '5 / 0' : Result => DivideByZeroError", () => {
    rpnCalculator.pushItem('5');
    rpnCalculator.pushItem('0');
    rpnCalculator.pushItem('/');
    expect(() => {
        rpnCalculator.calculate();
    }).toThrowError(DivideByZeroError);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUlBOQ2FsY3VsYXRvci50ZXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL19fdGVzdHNfXy9SUE5DYWxjdWxhdG9yLnRlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLEdBQUcsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVqRSxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFFMUUsT0FBTyxhQUE2QixNQUFNLHVCQUF1QixDQUFDO0FBQ2xFLE1BQU0sTUFBTSxHQUFlO0lBQ3pCLFVBQVUsRUFBRSxDQUFDLElBQUksR0FBRyxFQUFFLEVBQUUsSUFBSSxTQUFTLEVBQUUsRUFBRSxJQUFJLFFBQVEsRUFBRSxFQUFFLElBQUksTUFBTSxFQUFFLENBQUM7Q0FDdkUsQ0FBQztBQUVGLElBQUksYUFBNEIsQ0FBQztBQUVqQyxVQUFVLENBQUMsR0FBRyxFQUFFO0lBQ2QsYUFBYSxHQUFHLElBQUksYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQzVDLENBQUMsQ0FBQyxDQUFDO0FBRUgsYUFBYTtBQUNiLElBQUksQ0FBQyxnQ0FBZ0MsRUFBRSxHQUFHLEVBQUU7SUFDMUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUM1QixhQUFhLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzVCLGFBQWEsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7SUFFNUIsTUFBTSxDQUFDLGFBQWEsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUM5QyxDQUFDLENBQUMsQ0FBQztBQUVILGFBQWE7QUFDYixJQUFJLENBQUMsNkJBQTZCLEVBQUUsR0FBRyxFQUFFO0lBQ3ZDLGFBQWEsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7SUFD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